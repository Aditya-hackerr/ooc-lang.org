#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. "/about/" for the file
#   "content/about.html"). To select all children, grandchildren, ... of an
#   item, use the pattern "/about/*/"; "/about/*" will also select the parent,
#   because "*" matches zero or more characters.

require 'set'

preprocess do
  # create tags pages
  tags = Set.new
  items.each do |item|
    next if item[:tags].nil?
    item[:tags].each { |t| tags.add(t) }
  end

  tags.each do |tag|
  items << Nanoc::Item.new(
      "",
      { :tag => tag },
      "/tags/#{tag}/")
  end
end

compile '/assets/*' do
  case item[:extension]
    when 'sass'
      filter :sass
  end
end

compile '/tags/*' do
  layout 'tags'
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    filter :kramdown
    filter :mustache
    filter :colorize_syntax, :default_colorizer => :pygmentsrb
    layout 'default'
    filter :add_toc
  end
end

route '/assets/*' do
  out_ext = case item[:extension]
    when 'sass'
      'css'
    else
      item[:extension]
  end
  item.identifier.chop + '.' + out_ext
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
